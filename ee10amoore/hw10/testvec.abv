MODULE      CPU
TITLE      'Caltech10 CPU Test Vectors'


" Description:  These are the test vectors for the Caltech10 CPU.  This is a
"               Harvard architecture CPU and as such has separate program and
"               data address and data busses.  The program bus is read only
"               and has no control signals.  It has 13 bits of address and 16
"               bits of data.  The data bus is read/write and has separate
"               read and write signals along with a Memory/IO signal to
"               indicate if memory or I/O is being accessed.  The bus has 8
"               bits of address and 8 bits of data.  On reset the program
"               counter is set to 0.
"
"               These vectors test the standard implementation (no extra
"               credit instructions) of the CPU.
"
" Inputs:         ProgramDB[15..0]  - the 16-bit program data bus
"                 Reset             - system reset signal
"                 Clock             - system clock
"
" I/O:            DataDB[7..0]      - the 8-bit data data bus
"
" Outputs:        ProgramAB[12..0]  - the 13-bit program address bus
"                 DataAB[7..0]      - the 8-bit data address bus
"                 RD                - read signal for the data data bus
"                 WR                - write signal for the data data bus
"                 IO                - memory (0) or I/O (1) is being accessed
"
" Status Outputs: Accum[7..0]       - the 8-bit accumulator
"                 Flags[7..0]       - the 8-bit flag register
"                 XReg[7..0]        - the 8-bit X register
"                 SReg[7..0]        - the 8-bit S register


" Revision History:
" 11/05/17   Glen George  Initial Revision
" 02/12/18   Glen George  Updated comments



" Pin/Signal Declarations

" Inputs

ProgramDB15..ProgramDB0	pin;	"input  16-bit instruction data bus
Reset           	pin;	"input  system reset signal
Clock           	pin;	"input  system clock


" I/O

DataDB7..DataDB0	pin;	"I/O  8-bit Data data bus


" Outputs

ProgramAB12..ProgramAB0	pin;	"output  the 13-bit Program address bus
DataAB7..DataAB0	pin;	"output  the 8-bit Data address bus
RD			pin;	"output  read signal for the Data data bus
WR			pin;	"output  write signal for the Data data bus
IO			pin;	"output  accessing memory (0) or I/O (1)


" Status Outputs

Accum7..Accum0		pin;	"the accumulator
Flags7..Flags0		pin;	"the flags
XReg7..XReg0		pin;	"the X register
SReg7..SReg0		pin;	"the S register
Test7..Test0		pin;


" Busses

ProgramAB  =  [ProgramAB12..ProgramAB0];"Program address bus
ProgramDB  =  [ProgramDB15..ProgramDB0];"16-bit instruction data bus
DataAB     =  [DataAB7..DataAB0];	"Data address bus
DataDB     =  [DataDB7..DataDB0];	"Data data bus
Accum      =  [Accum7..Accum0];		"the accumulator
Flags      =  [Flags7..Flags0];		"flags from the ALU
XReg       =  [XReg7..XReg0];		"X register
SReg       =  [SReg7..SReg0];		"S register



" Test Vectors

" try some instructions to test the design

TEST_VECTORS ( [ Reset, Clock, ProgramDB, DataDB ] ->
               [ ProgramAB, DataAB, RD, WR, IO, DataDB ] )

" ; test that reset to address 0 and simple loads and stores work

[ 1, 0, ^H1F80,  .Z. ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " reset CPU
[ 1, 1, ^H1F80,  .Z. ] -> [    .X.,  .X., .X., .X., .X.,  .X. ];
[ 1, 0, ^H1F80,  .Z. ] -> [    .X.,  .X.,  0 ,  0 , .X.,  .X. ];
[ 1, 1, ^H1F80,  .Z. ] -> [    .X.,  .X.,  0 ,  0 , .X.,  .X. ];
[ 1, 0, ^H1F80,  .Z. ] -> [ ^H0000,  .X.,  0 ,  0 ,  0 ,  .X. ];
[ 1, 1, ^H1F80,  .Z. ] -> [ ^H0000,  .X.,  0 ,  0 ,  0 ,  .X. ];
[ 0, 0, ^H8955, ^HB5 ] -> [ ^H0000,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LDI	$55
[ 0, 1, ^H8955, ^HD9 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 55 in accumulator
[ 0, 0, ^HA05A, ^H20 ] -> [ ^H0001,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$5A
[ 0, 1, ^HA05A, ^H24 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 55 at address 5A
[ 0, 0, ^H80A5,  .Z. ] -> [ ^H0002, ^H5A,  0 ,  1 ,  0 , ^H55 ]; "    LDD	$A5
[ 0, 1, ^H80A5, ^H45 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;load 00 from address A5
[ 0, 0, ^H1F80, ^H00 ] -> [ ^H0003, ^HA5,  1 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;NOP so don't keep driving bus with same value
[ 0, 0, ^HA0FF, ^H57 ] -> [ ^H0004,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$FF
[ 0, 1, ^HA0FF, ^HCA ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 00 at address FF
[ 0, 0, ^H1F80,  .Z. ] -> [ ^H0005, ^HFF,  0 ,  1 ,  0 , ^H00 ]; "    NOP
[ 0, 1, ^H1F80, ^HF9 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H8000, ^H93 ] -> [ ^H0006,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LDD	$00
[ 0, 1, ^H8000, ^HE4 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;load FF from address 00
[ 0, 0, ^H1F80, ^HFF ] -> [ ^H0007, ^H00,  1 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HFF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA083, ^H43 ] -> [ ^H0008,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$83
[ 0, 1, ^HA083, ^HA8 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store FF at address 83
[ 0, 0, ^H1F80,  .Z. ] -> [ ^H0009, ^H83,  0 ,  1 ,  0 , ^HFF ]; "    NOP
[ 0, 1, ^H1F80, ^H84 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 

" ; test implied operand instructions

[ 0, 0, ^HD000, ^H03 ] -> [ ^H000A,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JMP	$1000
[ 0, 1, ^HD000, ^H89 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;unconditional jump to set PC
[ 0, 0, ^H4700, ^HAB ] -> [ ^H000B,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    ANDI	$00
[ 0, 1, ^H4700, ^H47 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot, clear all flags except Z
[ 0, 0, ^H0E00, ^HE2 ] -> [ ^H1000,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H5A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check all flags cleared
[ 0, 0, ^H1F80,  .Z. ] -> [ ^H1001, ^HFF,  0 ,  1 ,  0 , ^H01 ]; "    NOP
[ 0, 1, ^H1F80, ^H90 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^H90 ] -> [ ^H1002,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HC7 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check NOP didn't change flags
[ 0, 0, ^H0200,  .Z. ] -> [ ^H1003, ^HFE,  0 ,  1 ,  0 , ^H01 ]; "    POPF
[ 0, 1, ^H0200, ^H8E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;set flags to FF
[ 0, 0, ^H8955, ^HFF ] -> [ ^H1004, ^HFE,  1 ,  0 ,  0 ,  .X. ]; "    LDI	$55
[ 0, 1, ^H8955, ^HFF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 55 in accumulator
[ 0, 0, ^H0E00, ^H0B ] -> [ ^H1005,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H13 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;flags should push as AF
[ 0, 0, ^H1F80,  .Z. ] -> [ ^H1006, ^HFE,  0 ,  1 ,  0 , ^HAF ]; "    NOP
[ 0, 1, ^H1F80, ^HB7 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^HB6 ] -> [ ^H1007,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H43 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check NOP didn't change flags
[ 0, 0, ^H0200,  .Z. ] -> [ ^H1008, ^HFD,  0 ,  1 ,  0 , ^HAF ]; "    POPF
[ 0, 1, ^H0200, ^H43 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;set flags to 00
[ 0, 0, ^H0E00, ^H00 ] -> [ ^H1009, ^HFD,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags are right
[ 0, 0, ^H2D00,  .Z. ] -> [ ^H100A, ^HFD,  0 ,  1 ,  0 , ^H00 ]; "    NOT
[ 0, 1, ^H2D00, ^H68 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA044, ^HF6 ] -> [ ^H100B,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$44
[ 0, 1, ^HA044, ^H56 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should store AA at 44
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H100C, ^H44,  0 ,  1 ,  0 , ^HAA ]; "    PUSHF
[ 0, 1, ^H0E00, ^H4C ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S set)
[ 0, 0, ^H89F0,  .Z. ] -> [ ^H100D, ^HFC,  0 ,  1 ,  0 , ^H02 ]; "    LDI	$F0
[ 0, 1, ^H89F0, ^H69 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put F0 in accumulator
[ 0, 0, ^H2D00, ^H20 ] -> [ ^H100E,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOT
[ 0, 1, ^H2D00, ^H2D ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA044, ^H4E ] -> [ ^H100F,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$44
[ 0, 1, ^HA044, ^H90 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should store 0F at 44
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H1010, ^H44,  0 ,  1 ,  0 , ^H0F ]; "    PUSHF
[ 0, 1, ^H0E00, ^H12 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (all clear)
[ 0, 0, ^H89FF,  .Z. ] -> [ ^H1011, ^HFB,  0 ,  1 ,  0 , ^H00 ]; "    LDI	$FF
[ 0, 1, ^H89FF, ^H87 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put FF in accumulator
[ 0, 0, ^H2D00, ^HDC ] -> [ ^H1012,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOT
[ 0, 1, ^H2D00, ^HA4 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA044, ^H52 ] -> [ ^H1013,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$44
[ 0, 1, ^HA044, ^H41 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should store 00 at 44
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H1014, ^H44,  0 ,  1 ,  0 , ^H00 ]; "    PUSHF
[ 0, 1, ^H0E00, ^HB5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z set)
[ 0, 0, ^H7723,  .Z. ] -> [ ^H1015, ^HFA,  0 ,  1 ,  0 , ^H01 ]; "    ORI	$23
[ 0, 1, ^H7723, ^H4C ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;set accumulator to 23 and clear all flags
[ 0, 0, ^H0000, ^HE7 ] -> [ ^H1016,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    INC
[ 0, 1, ^H0000, ^HE3 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA066, ^HC1 ] -> [ ^H1017,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$66
[ 0, 1, ^HA066, ^H38 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should store 24 at 66
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H1018, ^H66,  0 ,  1 ,  0 , ^H24 ]; "    PUSHF
[ 0, 1, ^H0E00, ^H7A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (all clear)
[ 0, 0, ^H897F,  .Z. ] -> [ ^H1019, ^HF9,  0 ,  1 ,  0 , ^H00 ]; "    LDI	$7F
[ 0, 1, ^H897F, ^H71 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 7F in accumulator
[ 0, 0, ^H0000, ^H4F ] -> [ ^H101A,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    INC
[ 0, 1, ^H0000, ^H8D ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA066, ^HAE ] -> [ ^H101B,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$66
[ 0, 1, ^HA066, ^H70 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should store 80 at 66
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H101C, ^H66,  0 ,  1 ,  0 , ^H80 ]; "    PUSHF
[ 0, 1, ^H0E00, ^H8E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S, V set)
[ 0, 0, ^H89FF,  .Z. ] -> [ ^H101D, ^HF8,  0 ,  1 ,  0 , ^H06 ]; "    LDI	$FF
[ 0, 1, ^H89FF, ^H97 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put FF in accumulator
[ 0, 0, ^H0000, ^HBD ] -> [ ^H101E,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    INC
[ 0, 1, ^H0000, ^H36 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA066, ^H49 ] -> [ ^H101F,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$66
[ 0, 1, ^HA066, ^HAA ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should store 00 at 66
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H1020, ^H66,  0 ,  1 ,  0 , ^H00 ]; "    PUSHF
[ 0, 1, ^H0E00, ^H53 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z, C set)
[ 0, 0, ^H7B00,  .Z. ] -> [ ^H1021, ^HF7,  0 ,  1 ,  0 , ^H09 ]; "    DEC
[ 0, 1, ^H7B00, ^H77 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA0BB, ^HE7 ] -> [ ^H1022,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$BB
[ 0, 1, ^HA0BB, ^H59 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should store FF at BB
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H1023, ^HBB,  0 ,  1 ,  0 , ^HFF ]; "    PUSHF
[ 0, 1, ^H0E00, ^HAF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S, C set)
[ 0, 0, ^H8980,  .Z. ] -> [ ^H1024, ^HF6,  0 ,  1 ,  0 , ^H0A ]; "    LDI	$80
[ 0, 1, ^H8980, ^H0D ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 80 in accumulator
[ 0, 0, ^H7B00, ^HA2 ] -> [ ^H1025,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    DEC
[ 0, 1, ^H7B00, ^HDB ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA0BB, ^HF8 ] -> [ ^H1026,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$BB
[ 0, 1, ^HA0BB, ^H07 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should store 7F at BB
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H1027, ^HBB,  0 ,  1 ,  0 , ^H7F ]; "    PUSHF
[ 0, 1, ^H0E00, ^H07 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V set)
[ 0, 0, ^H8960,  .Z. ] -> [ ^H1028, ^HF5,  0 ,  1 ,  0 , ^H04 ]; "    LDI	$60
[ 0, 1, ^H8960, ^HB9 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 60 in accumulator
[ 0, 0, ^H7B00, ^HDD ] -> [ ^H1029,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    DEC
[ 0, 1, ^H7B00, ^HF6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA0BB, ^HAF ] -> [ ^H102A,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$BB
[ 0, 1, ^HA0BB, ^HBD ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should store 5F at BB
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H102B, ^HBB,  0 ,  1 ,  0 , ^H5F ]; "    PUSHF
[ 0, 1, ^H0E00, ^H71 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (all clear)
[ 0, 0, ^H8901,  .Z. ] -> [ ^H102C, ^HF4,  0 ,  1 ,  0 , ^H00 ]; "    LDI	$1
[ 0, 1, ^H8901, ^H74 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 01 in accumulator
[ 0, 0, ^H7B00, ^H3C ] -> [ ^H102D,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    DEC
[ 0, 1, ^H7B00, ^H18 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA0BB, ^H46 ] -> [ ^H102E,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$BB
[ 0, 1, ^HA0BB, ^HF5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should store 00 at BB
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H102F, ^HBB,  0 ,  1 ,  0 , ^H00 ]; "    PUSHF
[ 0, 1, ^H0E00, ^H96 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z set)
[ 0, 0, ^H4700,  .Z. ] -> [ ^H1030, ^HF3,  0 ,  1 ,  0 , ^H01 ]; "    ANDI	$0
[ 0, 1, ^H4700, ^HD2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;reset all flags except Z
[ 0, 0, ^H897F, ^HC7 ] -> [ ^H1031,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LDI	$7F
[ 0, 1, ^H897F, ^HD2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put known value in A
[ 0, 0, ^H5800, ^H67 ] -> [ ^H1032,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LSL
[ 0, 1, ^H5800, ^H77 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now FE
[ 0, 0, ^H0E00, ^HDB ] -> [ ^H1033,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H92 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V & S set)
[ 0, 0, ^HA080,  .Z. ] -> [ ^H1034, ^HF2,  0 ,  1 ,  0 , ^H06 ]; "    STD	$80
[ 0, 1, ^HA080, ^HD5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check that FE is written to 80
[ 0, 0, ^H5800,  .Z. ] -> [ ^H1035, ^H80,  0 ,  1 ,  0 , ^HFE ]; "    LSL
[ 0, 1, ^H5800, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now FC
[ 0, 0, ^H0E00, ^HB8 ] -> [ ^H1036,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H7C ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C & S set)
[ 0, 0, ^HA077,  .Z. ] -> [ ^H1037, ^HF1,  0 ,  1 ,  0 , ^H0A ]; "    STD	$77
[ 0, 1, ^HA077, ^H7F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check that FC is written to 77
[ 0, 0, ^H5800,  .Z. ] -> [ ^H1038, ^H77,  0 ,  1 ,  0 , ^HFC ]; "    LSL
[ 0, 1, ^H5800, ^HFF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now F8
[ 0, 0, ^H5800, ^H04 ] -> [ ^H1039,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LSL
[ 0, 1, ^H5800, ^H5B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now F0
[ 0, 0, ^H5800, ^HBA ] -> [ ^H103A,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LSL
[ 0, 1, ^H5800, ^H0F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now E0
[ 0, 0, ^H5800, ^H33 ] -> [ ^H103B,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LSL
[ 0, 1, ^H5800, ^H91 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now C0
[ 0, 0, ^HA077, ^H0D ] -> [ ^H103C,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$77
[ 0, 1, ^HA077, ^H7B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check that C0 is written to 77
[ 0, 0, ^H5800,  .Z. ] -> [ ^H103D, ^H77,  0 ,  1 ,  0 , ^HC0 ]; "    LSL
[ 0, 1, ^H5800, ^H1D ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now 80
[ 0, 0, ^H5800, ^H5F ] -> [ ^H103E,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LSL
[ 0, 1, ^H5800, ^HEB ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now 00
[ 0, 0, ^H0E00, ^H2E ] -> [ ^H103F,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HDE ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C, V, & Z set)
[ 0, 0, ^HA077,  .Z. ] -> [ ^H1040, ^HF0,  0 ,  1 ,  0 , ^H0D ]; "    STD	$77
[ 0, 1, ^HA077, ^H73 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check that 00 is written to 77
[ 0, 0, ^H5800,  .Z. ] -> [ ^H1041, ^H77,  0 ,  1 ,  0 , ^H00 ]; "    LSL
[ 0, 1, ^H5800, ^HAF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now 00
[ 0, 0, ^H0E00, ^HDB ] -> [ ^H1042,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HF3 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z set)
[ 0, 0, ^HA077,  .Z. ] -> [ ^H1043, ^HEF,  0 ,  1 ,  0 , ^H01 ]; "    STD	$77
[ 0, 1, ^HA077, ^HB3 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check that 00 is written to 77
[ 0, 0, ^H89F0,  .Z. ] -> [ ^H1044, ^H77,  0 ,  1 ,  0 , ^H00 ]; "    LDI	$F0
[ 0, 1, ^H89F0, ^HDD ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;get a known value in A
[ 0, 0, ^H6B52, ^H6D ] -> [ ^H1045,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    ADDI	$52
[ 0, 1, ^H6B52, ^H92 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;reset all flags except carry and A is 42
[ 0, 0, ^H5000, ^H49 ] -> [ ^H1046,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    RLC
[ 0, 1, ^H5000, ^H98 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now 85
[ 0, 0, ^H0E00, ^HB1 ] -> [ ^H1047,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H4A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V & S set)
[ 0, 0, ^HA0AA,  .Z. ] -> [ ^H1048, ^HEE,  0 ,  1 ,  0 , ^H06 ]; "    STD	$AA
[ 0, 1, ^HA0AA, ^HEF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check that 85 is written to AA
[ 0, 0, ^H5000,  .Z. ] -> [ ^H1049, ^HAA,  0 ,  1 ,  0 , ^H85 ]; "    RLC
[ 0, 1, ^H5000, ^H5F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now 0A
[ 0, 0, ^H0E00, ^H42 ] -> [ ^H104A,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HDC ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C & V set)
[ 0, 0, ^HA0AA,  .Z. ] -> [ ^H104B, ^HED,  0 ,  1 ,  0 , ^H0C ]; "    STD	$AA
[ 0, 1, ^HA0AA, ^H7D ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check that 0A is written to AA
[ 0, 0, ^H5000,  .Z. ] -> [ ^H104C, ^HAA,  0 ,  1 ,  0 , ^H0A ]; "    RLC
[ 0, 1, ^H5000, ^H0C ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now 15
[ 0, 0, ^H5000, ^HB5 ] -> [ ^H104D,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    RLC
[ 0, 1, ^H5000, ^H58 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now 2A
[ 0, 0, ^HA0AA, ^HB0 ] -> [ ^H104E,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$AA
[ 0, 1, ^HA0AA, ^H0E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check that 2A is written to AA
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H104F, ^HAA,  0 ,  1 ,  0 , ^H2A ]; "    PUSHF
[ 0, 1, ^H0E00, ^H06 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (none set)
[ 0, 0, ^H8980,  .Z. ] -> [ ^H1050, ^HEC,  0 ,  1 ,  0 , ^H00 ]; "    LDI	$80
[ 0, 1, ^H8980, ^H7B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 80 into A
[ 0, 0, ^H5000, ^H3C ] -> [ ^H1051,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    RLC
[ 0, 1, ^H5000, ^HE6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;A is now 00
[ 0, 0, ^H0E00, ^H43 ] -> [ ^H1052,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H49 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C, V, & Z set)
[ 0, 0, ^HA0AA,  .Z. ] -> [ ^H1053, ^HEB,  0 ,  1 ,  0 , ^H0D ]; "    STD	$AA
[ 0, 1, ^HA0AA, ^H15 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check that 00 is written to AA
[ 0, 0, ^H1F80,  .Z. ] -> [ ^H1054, ^HAA,  0 ,  1 ,  0 , ^H00 ]; "    NOP
[ 0, 1, ^H1F80, ^HE0 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;NOP to flush out the write before reset

" ; reset and test two operand instructions

[ 1, 0, ^H1F80,  .Z. ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " reset CPU
[ 1, 1, ^H1F80,  .Z. ] -> [    .X.,  .X., .X., .X., .X.,  .X. ];
[ 1, 0, ^H1F80,  .Z. ] -> [    .X.,  .X.,  0 ,  0 , .X.,  .X. ];
[ 1, 1, ^H1F80,  .Z. ] -> [    .X.,  .X.,  0 ,  0 , .X.,  .X. ];
[ 1, 0, ^H1F80,  .Z. ] -> [ ^H0000,  .X.,  0 ,  0 ,  0 ,  .X. ];
[ 1, 1, ^H1F80,  .Z. ] -> [ ^H0000,  .X.,  0 ,  0 ,  0 ,  .X. ];
[ 0, 0, ^HCCCC, ^H77 ] -> [    .X.,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JMP	$0CCC
[ 0, 1, ^HCCCC, ^HE7 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;unconditional jump to set PC
[ 0, 0, ^H4700, ^HFB ] -> [    .X.,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    ANDI	$00
[ 0, 1, ^H4700, ^H14 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot, clear accumulator and only Z set
[ 0, 0, ^H6B7F, ^HD9 ] -> [ ^H0CCC,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    ADDI	$7F
[ 0, 1, ^H6B7F, ^HBB ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^H44 ] -> [ ^H0CCD,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H9C ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (none set)
[ 0, 0, ^HA001,  .Z. ] -> [ ^H0CCE, ^HFF,  0 ,  1 ,  0 , ^H00 ]; "    STD	$01
[ 0, 1, ^HA001, ^H36 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 7F at 01
[ 0, 0, ^H6943,  .Z. ] -> [ ^H0CCF, ^H01,  0 ,  1 ,  0 , ^H7F ]; "    ADD	X, $43
[ 0, 1, ^H6943, ^HC6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 02 from 43
[ 0, 0, ^H0E00, ^H02 ] -> [ ^H0CD0, ^H43,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H02 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S, V)
[ 0, 0, ^HB632,  .Z. ] -> [ ^H0CD1, ^HFE,  0 ,  1 ,  0 , ^H06 ]; "    ST	X+, $32
[ 0, 1, ^HB632, ^HEE ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 81 at 32
[ 0, 0, ^H68B4,  .Z. ] -> [ ^H0CD2, ^H32,  0 ,  1 ,  0 , ^H81 ]; "    ADD	$B4
[ 0, 1, ^H68B4, ^H17 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read C5 from B4
[ 0, 0, ^H0E00, ^HC5 ] -> [ ^H0CD3, ^HB4,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HC5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V, C)
[ 0, 0, ^HB667,  .Z. ] -> [ ^H0CD4, ^HFD,  0 ,  1 ,  0 , ^H0C ]; "    ST	X+, $67
[ 0, 1, ^HB667, ^H9C ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 46 at 68
[ 0, 0, ^H6AAA,  .Z. ] -> [ ^H0CD5, ^H68,  0 ,  1 ,  0 , ^H46 ]; "    ADD	S, $AA
[ 0, 1, ^H6AAA, ^H41 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read BA from A7
[ 0, 0, ^H0E00, ^HBA ] -> [ ^H0CD6, ^HA7,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HBA ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C, Z)
[ 0, 0, ^HA6BB,  .Z. ] -> [ ^H0CD7, ^HFC,  0 ,  1 ,  0 , ^H09 ]; "    ST	+X, $BB
[ 0, 1, ^HA6BB, ^HE5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 00 at BE
[ 0, 0, ^H6A00,  .Z. ] -> [ ^H0CD8, ^HBE,  0 ,  1 ,  0 , ^H00 ]; "    ADD	S, $00
[ 0, 1, ^H6A00, ^H5E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read B7 from FC
[ 0, 0, ^H0E00, ^HB7 ] -> [ ^H0CD9, ^HFC,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HB7 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HA6C3,  .Z. ] -> [ ^H0CDA, ^HFB,  0 ,  1 ,  0 , ^H02 ]; "    ST	+X, $C3
[ 0, 1, ^HA6C3, ^H48 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store B7 at C7
[ 0, 0, ^H6900,  .Z. ] -> [ ^H0CDB, ^HC7,  0 ,  1 ,  0 , ^HB7 ]; "    ADD	X, $00
[ 0, 1, ^H6900, ^H77 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read FF from 04
[ 0, 0, ^H0E00, ^HFF ] -> [ ^H0CDC, ^H04,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HFF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S, C)
[ 0, 0, ^HB6DD,  .Z. ] -> [ ^H0CDD, ^HFA,  0 ,  1 ,  0 , ^H0A ]; "    ST	X+, $DD
[ 0, 1, ^HB6DD, ^H91 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store B6 at E1
[ 0, 0, ^H637F,  .Z. ] -> [ ^H0CDE, ^HE1,  0 ,  1 ,  0 , ^HB6 ]; "    ADCI	$7F
[ 0, 1, ^H637F, ^H86 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^HD2 ] -> [ ^H0CDF,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HE2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C)
[ 0, 0, ^HA0F1,  .Z. ] -> [ ^H0CE0, ^HF9,  0 ,  1 ,  0 , ^H08 ]; "    STD	$F1
[ 0, 1, ^HA0F1, ^HA3 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 36 at F1
[ 0, 0, ^H6102,  .Z. ] -> [ ^H0CE1, ^HF1,  0 ,  1 ,  0 , ^H36 ]; "    ADC	X, $02
[ 0, 1, ^H6102, ^H16 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 43 from 07
[ 0, 0, ^H0E00, ^H43 ] -> [ ^H0CE2, ^H07,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H43 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (none)
[ 0, 0, ^HBE88,  .Z. ] -> [ ^H0CE3, ^HF8,  0 ,  1 ,  0 , ^H00 ]; "    ST	X-, $88
[ 0, 1, ^HBE88, ^H97 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 7A at 8D
[ 0, 0, ^H604B,  .Z. ] -> [ ^H0CE4, ^H8D,  0 ,  1 ,  0 , ^H7A ]; "    ADC	$4B
[ 0, 1, ^H604B, ^H89 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 06 from 4B
[ 0, 0, ^H0E00, ^H06 ] -> [ ^H0CE5, ^H4B,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H06 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V, S)
[ 0, 0, ^HBE99,  .Z. ] -> [ ^H0CE6, ^HF7,  0 ,  1 ,  0 , ^H06 ]; "    ST	X-, $99
[ 0, 1, ^HBE99, ^H21 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 80 at 9D
[ 0, 0, ^H62CC,  .Z. ] -> [ ^H0CE7, ^H9D,  0 ,  1 ,  0 , ^H80 ]; "    ADC	S, $CC
[ 0, 1, ^H62CC, ^H8A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 80 from C3
[ 0, 0, ^H0E00, ^H80 ] -> [ ^H0CE8, ^HC3,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H80 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C, Z, V)
[ 0, 0, ^HAE3F,  .Z. ] -> [ ^H0CE9, ^HF6,  0 ,  1 ,  0 , ^H0D ]; "    ST	-X, $3F
[ 0, 1, ^HAE3F, ^H67 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 00 at 41
[ 0, 0, ^H63A3,  .Z. ] -> [ ^H0CEA, ^H41,  0 ,  1 ,  0 , ^H00 ]; "    ADCI	$A3
[ 0, 1, ^H63A3, ^H99 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^HB0 ] -> [ ^H0CEB,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H08 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HAEFF,  .Z. ] -> [ ^H0CEC, ^HF5,  0 ,  1 ,  0 , ^H02 ]; "    ST	-X, $FF
[ 0, 1, ^HAEFF, ^H70 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store A4 at 00
[ 0, 0, ^H6100,  .Z. ] -> [ ^H0CED, ^H00,  0 ,  1 ,  0 , ^HA4 ]; "    ADC	X, $00
[ 0, 1, ^H6100, ^H42 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read DC from 01
[ 0, 0, ^H0E00, ^HDC ] -> [ ^H0CEE, ^H01,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HDC ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S, C)
[ 0, 0, ^HBEEE,  .Z. ] -> [ ^H0CEF, ^HF4,  0 ,  1 ,  0 , ^H0A ]; "    ST	X-, $EE
[ 0, 1, ^HBEEE, ^H22 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 80 at EF
[ 0, 0, ^H1A52,  .Z. ] -> [ ^H0CF0, ^HEF,  0 ,  1 ,  0 , ^H80 ]; "    SBB	S, $52
[ 0, 1, ^H1A52, ^H61 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 00 from 46
[ 0, 0, ^H0E00, ^H00 ] -> [ ^H0CF1, ^H46,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V)
[ 0, 0, ^HBA00,  .Z. ] -> [ ^H0CF2, ^HF3,  0 ,  1 ,  0 , ^H04 ]; "    ST	S-, $00
[ 0, 1, ^HBA00, ^H6A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 7F at F3
[ 0, 0, ^H184B,  .Z. ] -> [ ^H0CF3, ^HF3,  0 ,  1 ,  0 , ^H7F ]; "    SBB	$4B
[ 0, 1, ^H184B, ^HD5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 3E from 4B
[ 0, 0, ^H0E00, ^H3E ] -> [ ^H0CF4, ^H4B,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H3E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (none set)
[ 0, 0, ^HBA99,  .Z. ] -> [ ^H0CF5, ^HF1,  0 ,  1 ,  0 , ^H00 ]; "    ST	S-, $99
[ 0, 1, ^HBA99, ^H40 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 41 at 8A
[ 0, 0, ^H19C4,  .Z. ] -> [ ^H0CF6, ^H8A,  0 ,  1 ,  0 , ^H41 ]; "    SBB	X, $C4
[ 0, 1, ^H19C4, ^H4B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 57 from C4
[ 0, 0, ^H0E00, ^H57 ] -> [ ^H0CF7, ^HC4,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H57 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C, S)
[ 0, 0, ^HAA3F,  .Z. ] -> [ ^H0CF8, ^HEF,  0 ,  1 ,  0 , ^H0A ]; "    ST	-S, $3F
[ 0, 1, ^HAA3F, ^H05 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store EA at 2D
[ 0, 0, ^H1BF3,  .Z. ] -> [ ^H0CF9, ^H2D,  0 ,  1 ,  0 , ^HEA ]; "    SBBI	$F3
[ 0, 1, ^H1BF3, ^H1B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^HD9 ] -> [ ^H0CFA,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HDD ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C, S)
[ 0, 0, ^HAA14,  .Z. ] -> [ ^H0CFB, ^HED,  0 ,  1 ,  0 , ^H0A ]; "    ST	-S, $14
[ 0, 1, ^HAA14, ^H8F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store F6 at 00
[ 0, 0, ^H1900,  .Z. ] -> [ ^H0CFC, ^H00,  0 ,  1 ,  0 , ^HF6 ]; "    SBB	X, $00
[ 0, 1, ^H1900, ^HF8 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read F5 from 00
[ 0, 0, ^H0E00, ^HF5 ] -> [ ^H0CFD, ^H00,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HF5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z)
[ 0, 0, ^HBA20,  .Z. ] -> [ ^H0CFE, ^HEB,  0 ,  1 ,  0 , ^H01 ]; "    ST	S-, $20
[ 0, 1, ^HBA20, ^H0B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 00 at 0B
[ 0, 0, ^H1BC0,  .Z. ] -> [ ^H0CFF, ^H0B,  0 ,  1 ,  0 , ^H00 ]; "    SBBI	$C0
[ 0, 1, ^H1BC0, ^H4C ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^HEA ] -> [ ^H0D00,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H41 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C)
[ 0, 0, ^HB735,  .Z. ] -> [ ^H0D01, ^HE9,  0 ,  1 ,  0 , ^H08 ]; "    ST	X, $35
[ 0, 1, ^HB735, ^HD0 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 40 at 35
[ 0, 0, ^H1B90,  .Z. ] -> [ ^H0D02, ^H35,  0 ,  1 ,  0 , ^H40 ]; "    SBBI	$90
[ 0, 1, ^H1B90, ^HE4 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^HAE ] -> [ ^H0D03,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HDA ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C, V, S)
[ 0, 0, ^HB771,  .Z. ] -> [ ^H0D04, ^HE8,  0 ,  1 ,  0 , ^H0E ]; "    ST	X, $71
[ 0, 1, ^HB771, ^HCD ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store AF at 71
[ 0, 0, ^H137F,  .Z. ] -> [ ^H0D05, ^H71,  0 ,  1 ,  0 , ^HAF ]; "    SUBI	$7F
[ 0, 1, ^H137F, ^H4A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^H9A ] -> [ ^H0D06,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H14 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V)
[ 0, 0, ^HA010,  .Z. ] -> [ ^H0D07, ^HE7,  0 ,  1 ,  0 , ^H04 ]; "    STD	$10
[ 0, 1, ^HA010, ^H57 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 30 at 10
[ 0, 0, ^H11A7,  .Z. ] -> [ ^H0D08, ^H10,  0 ,  1 ,  0 , ^H30 ]; "    SUB	X, $A7
[ 0, 1, ^H11A7, ^HF0 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 1F from A7
[ 0, 0, ^H0E00, ^H1F ] -> [ ^H0D09, ^HA7,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H1F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (none set)
[ 0, 0, ^HB211,  .Z. ] -> [ ^H0D0A, ^HE6,  0 ,  1 ,  0 , ^H00 ]; "    ST	S+, $11
[ 0, 1, ^HB211, ^H40 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 11 at F7
[ 0, 0, ^H10A1,  .Z. ] -> [ ^H0D0B, ^HF7,  0 ,  1 ,  0 , ^H11 ]; "    SUB	$A1
[ 0, 1, ^H10A1, ^H46 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 82 from A1
[ 0, 0, ^H0E00, ^H82 ] -> [ ^H0D0C, ^HA1,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H82 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V, C, S)
[ 0, 0, ^HB241,  .Z. ] -> [ ^H0D0D, ^HE6,  0 ,  1 ,  0 , ^H0E ]; "    ST	S+, $41
[ 0, 1, ^HB241, ^HC7 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 8F at 27
[ 0, 0, ^H12B0,  .Z. ] -> [ ^H0D0E, ^H27,  0 ,  1 ,  0 , ^H8F ]; "    SUB	S, $B0
[ 0, 1, ^H12B0, ^HD9 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read E0 from 97
[ 0, 0, ^H0E00, ^HE0 ] -> [ ^H0D0F, ^H97,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HE0 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C, S)
[ 0, 0, ^HA230,  .Z. ] -> [ ^H0D10, ^HE6,  0 ,  1 ,  0 , ^H0A ]; "    ST	+S, $30
[ 0, 1, ^HA230, ^HF1 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store AF at 17
[ 0, 0, ^H1230,  .Z. ] -> [ ^H0D11, ^H17,  0 ,  1 ,  0 , ^HAF ]; "    SUB	S, $30
[ 0, 1, ^H1230, ^HA9 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read AF from 17
[ 0, 0, ^H0E00, ^HAF ] -> [ ^H0D12, ^H17,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HAF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z)
[ 0, 0, ^HA253,  .Z. ] -> [ ^H0D13, ^HE6,  0 ,  1 ,  0 , ^H01 ]; "    ST	+S, $53
[ 0, 1, ^HA253, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 00 at 3A
[ 0, 0, ^H1122,  .Z. ] -> [ ^H0D14, ^H3A,  0 ,  1 ,  0 , ^H00 ]; "    SUB	X, $22
[ 0, 1, ^H1122, ^H8F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 44 from 22
[ 0, 0, ^H0E00, ^H44 ] -> [ ^H0D15, ^H22,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H44 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S, C)
[ 0, 0, ^HB21A,  .Z. ] -> [ ^H0D16, ^HE6,  0 ,  1 ,  0 , ^H0A ]; "    ST	S+, $1A
[ 0, 1, ^HB21A, ^HE7 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store BC at 00
[ 0, 0, ^H337F,  .Z. ] -> [ ^H0D17, ^H00,  0 ,  1 ,  0 , ^HBC ]; "    CMPI	$7F
[ 0, 1, ^H337F, ^H79 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^H3E ] -> [ ^H0D18,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H61 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V)
[ 0, 0, ^HA021,  .Z. ] -> [ ^H0D19, ^HE6,  0 ,  1 ,  0 , ^H04 ]; "    STD	$21
[ 0, 1, ^HA021, ^HB2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store BC at 21
[ 0, 0, ^H317A,  .Z. ] -> [ ^H0D1A, ^H21,  0 ,  1 ,  0 , ^HBC ]; "    CMP	X, $7A
[ 0, 1, ^H317A, ^H4A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read EE from 7A
[ 0, 0, ^H0E00, ^HEE ] -> [ ^H0D1B, ^H7A,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HEE ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S, C)
[ 0, 0, ^HBE23,  .Z. ] -> [ ^H0D1C, ^HE5,  0 ,  1 ,  0 , ^H0A ]; "    ST	X-, $23
[ 0, 1, ^HBE23, ^H21 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store BC at 23
[ 0, 0, ^H9EBA,  .Z. ] -> [ ^H0D1D, ^H23,  0 ,  1 ,  0 , ^HBC ]; "    LD	X-, $BA
[ 0, 1, ^H9EBA, ^HE2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 40 from B9
[ 0, 0, ^H30D9, ^H40 ] -> [ ^H0D1E, ^HB9,  1 ,  0 ,  0 ,  .X. ]; "    CMP	$D9
[ 0, 1, ^H30D9, ^H40 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 30 from D9
[ 0, 0, ^H0E00, ^H30 ] -> [ ^H0D1F, ^HD9,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H30 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (none set)
[ 0, 0, ^HBEC6,  .Z. ] -> [ ^H0D20, ^HE4,  0 ,  1 ,  0 , ^H00 ]; "    ST	X-, $C6
[ 0, 1, ^HBEC6, ^HE4 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 40 at C4
[ 0, 0, ^H3222,  .Z. ] -> [ ^H0D21, ^HC4,  0 ,  1 ,  0 , ^H40 ]; "    CMP	S, $22
[ 0, 1, ^H3222, ^HA8 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 66 from 06
[ 0, 0, ^H0E00, ^H66 ] -> [ ^H0D22, ^H06,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H66 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C, S)
[ 0, 0, ^HAE78,  .Z. ] -> [ ^H0D23, ^HE3,  0 ,  1 ,  0 , ^H0A ]; "    ST	-X, $78
[ 0, 1, ^HAE78, ^HF9 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 40 at 74
[ 0, 0, ^H3130,  .Z. ] -> [ ^H0D24, ^H74,  0 ,  1 ,  0 , ^H40 ]; "    CMP	X, $30
[ 0, 1, ^H3130, ^H9F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 40 from 2C
[ 0, 0, ^H0E00, ^H40 ] -> [ ^H0D25, ^H2C,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H40 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z)
[ 0, 0, ^HAE88,  .Z. ] -> [ ^H0D26, ^HE2,  0 ,  1 ,  0 , ^H01 ]; "    ST	-X, $88
[ 0, 1, ^HAE88, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 40 at 83
[ 0, 0, ^H3129,  .Z. ] -> [ ^H0D27, ^H83,  0 ,  1 ,  0 , ^H40 ]; "    CMP	X, $29
[ 0, 1, ^H3129, ^HF3 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 95 from 24
[ 0, 0, ^H0E00, ^H95 ] -> [ ^H0D28, ^H24,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H95 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C, V, S)
[ 0, 0, ^HBE00,  .Z. ] -> [ ^H0D29, ^HE1,  0 ,  1 ,  0 , ^H0E ]; "    ST	X-, $00
[ 0, 1, ^HBE00, ^H54 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 40 at FB
[ 0, 0, ^H33E3,  .Z. ] -> [ ^H0D2A, ^HFB,  0 ,  1 ,  0 , ^H40 ]; "    CMPI	$E3
[ 0, 1, ^H33E3, ^H20 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;compare with E3
[ 0, 0, ^H0E00, ^HA1 ] -> [ ^H0D2B,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H79 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (C)
[ 0, 0, ^HBE06,  .Z. ] -> [ ^H0D2C, ^HE0,  0 ,  1 ,  0 , ^H08 ]; "    ST	X-, $06
[ 0, 1, ^HBE06, ^HC5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 40 at 00
[ 0, 0, ^H8E23,  .Z. ] -> [ ^H0D2D, ^H00,  0 ,  1 ,  0 , ^H40 ]; "    LD	-X, $23
[ 0, 1, ^H8E23, ^H21 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read B9 from 1B
[ 0, 0, ^H30DC, ^HB9 ] -> [ ^H0D2E, ^H1B,  1 ,  0 ,  0 ,  .X. ]; "    CMP	$DC
[ 0, 1, ^H30DC, ^HB9 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 31 from DC
[ 0, 0, ^H0E00, ^H31 ] -> [ ^H0D2F, ^HDC,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H31 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HBE26,  .Z. ] -> [ ^H0D30, ^HDF,  0 ,  1 ,  0 , ^H02 ]; "    ST	X-, $26
[ 0, 1, ^HBE26, ^HE7 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store B9 at 1E
[ 0, 0, ^H33AA,  .Z. ] -> [ ^H0D31, ^H1E,  0 ,  1 ,  0 , ^HB9 ]; "    CMPI	$AA
[ 0, 1, ^H33AA, ^HD4 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^HF7 ] -> [ ^H0D32,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H12 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (none set)
[ 0, 0, ^HAEE2,  .Z. ] -> [ ^H0D33, ^HDE,  0 ,  1 ,  0 , ^H00 ]; "    ST	-X, $E2
[ 0, 1, ^HAEE2, ^H27 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store B9 at D8
[ 0, 0, ^H0200,  .Z. ] -> [ ^H0D34, ^HD8,  0 ,  1 ,  0 , ^HB9 ]; "    POPF
[ 0, 1, ^H0200, ^H86 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;set all flags
[ 0, 0, ^H0E00, ^HFF ] -> [ ^H0D35, ^HDE,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HFF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags
[ 0, 0, ^H47D3,  .Z. ] -> [ ^H0D36, ^HDE,  0 ,  1 ,  0 , ^HAF ]; "    ANDI	$D3
[ 0, 1, ^H47D3, ^HF3 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^HCC ] -> [ ^H0D37,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HD2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HAEFF,  .Z. ] -> [ ^H0D38, ^HDD,  0 ,  1 ,  0 , ^HAE ]; "    ST	-X, $FF
[ 0, 1, ^HAEFF, ^HD4 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 91 at F4
[ 0, 0, ^H467C,  .Z. ] -> [ ^H0D39, ^HF4,  0 ,  1 ,  0 , ^H91 ]; "    AND	S, $7C
[ 0, 1, ^H467C, ^HAE ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 66 from 59
[ 0, 0, ^H0E00, ^H66 ] -> [ ^H0D3A, ^H59,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H66 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z)
[ 0, 0, ^HAE4F,  .Z. ] -> [ ^H0D3B, ^HDC,  0 ,  1 ,  0 , ^HAD ]; "    ST	-X, $4F
[ 0, 1, ^HAE4F, ^H96 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 00 at 43
[ 0, 0, ^H0200,  .Z. ] -> [ ^H0D3C, ^H43,  0 ,  1 ,  0 , ^H00 ]; "    POPF
[ 0, 1, ^H0200, ^HA6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;clear all flags
[ 0, 0, ^H9EA1, ^H00 ] -> [ ^H0D3D, ^HDC,  1 ,  0 ,  0 ,  .X. ]; "    LD	X-, $A1
[ 0, 1, ^H9EA1, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read E6 from 95
[ 0, 0, ^H0E00, ^HE6 ] -> [ ^H0D3E, ^H95,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HE6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (should be 00)
[ 0, 0, ^H44FE,  .Z. ] -> [ ^H0D3F, ^HDC,  0 ,  1 ,  0 , ^H00 ]; "    AND	$FE
[ 0, 1, ^H44FE, ^HE0 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read AC from FE
[ 0, 0, ^H0E00, ^HAC ] -> [ ^H0D40, ^HFE,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HAC ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HAE71,  .Z. ] -> [ ^H0D41, ^HDB,  0 ,  1 ,  0 , ^H02 ]; "    ST	-X, $71
[ 0, 1, ^HAE71, ^HD6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store A4 at 63
[ 0, 0, ^H45D8,  .Z. ] -> [ ^H0D42, ^H63,  0 ,  1 ,  0 , ^HA4 ]; "    AND	X, $D8
[ 0, 1, ^H45D8, ^H58 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 13 from CA
[ 0, 0, ^H0E00, ^H13 ] -> [ ^H0D43, ^HCA,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H13 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z)
[ 0, 0, ^HBE8E,  .Z. ] -> [ ^H0D44, ^HDA,  0 ,  1 ,  0 , ^H01 ]; "    ST	X-, $8E
[ 0, 1, ^HBE8E, ^H15 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 00 at 80 (x=F1 s=DA)
[ 0, 0, ^H0200,  .Z. ] -> [ ^H0D45, ^H80,  0 ,  1 ,  0 , ^H00 ]; "    POPF
[ 0, 1, ^H0200, ^H0A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;set all flags
[ 0, 0, ^H96A8, ^HFF ] -> [ ^H0D46, ^HDA,  1 ,  0 ,  0 ,  .X. ]; "    LD	X+, $A8
[ 0, 1, ^H96A8, ^HFF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read AA from 99
[ 0, 0, ^H0E00, ^HAA ] -> [ ^H0D47, ^H99,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HAA ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags
[ 0, 0, ^H4F9F,  .Z. ] -> [ ^H0D48, ^HDA,  0 ,  1 ,  0 , ^HAF ]; "    TSTI	$9F
[ 0, 1, ^H4F9F, ^HDE ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^H1E ] -> [ ^H0D49,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HF2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HB7DD,  .Z. ] -> [ ^H0D4A, ^HD9,  0 ,  1 ,  0 , ^HAE ]; "    ST	X, $DD
[ 0, 1, ^HB7DD, ^H88 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store AA at CF
[ 0, 0, ^H4E75,  .Z. ] -> [ ^H0D4B, ^HCF,  0 ,  1 ,  0 , ^HAA ]; "    TST	S, $75
[ 0, 1, ^H4E75, ^H48 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 55 from 4E
[ 0, 0, ^H0E00, ^H55 ] -> [ ^H0D4C, ^H4E,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H55 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z)
[ 0, 0, ^HB7F4,  .Z. ] -> [ ^H0D4D, ^HD8,  0 ,  1 ,  0 , ^HAD ]; "    ST	X, $F4
[ 0, 1, ^HB7F4, ^HD0 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store AA at E6
[ 0, 0, ^H0200,  .Z. ] -> [ ^H0D4E, ^HE6,  0 ,  1 ,  0 , ^HAA ]; "    POPF
[ 0, 1, ^H0200, ^H63 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;clear all flags
[ 0, 0, ^H861D, ^H00 ] -> [ ^H0D4F, ^HD8,  1 ,  0 ,  0 ,  .X. ]; "    LD	+X, $1D
[ 0, 1, ^H861D, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read D9 from 10
[ 0, 0, ^H0E00, ^HD9 ] -> [ ^H0D50, ^H10,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HD9 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (should be 00)
[ 0, 0, ^H4CC7,  .Z. ] -> [ ^H0D51, ^HD8,  0 ,  1 ,  0 , ^H00 ]; "    TST	$C7
[ 0, 1, ^H4CC7, ^H44 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read A6 from C7
[ 0, 0, ^H0E00, ^HA6 ] -> [ ^H0D52, ^HC7,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HA6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HAE53,  .Z. ] -> [ ^H0D53, ^HD7,  0 ,  1 ,  0 , ^H02 ]; "    ST	-X, $53
[ 0, 1, ^HAE53, ^H32 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store D9 at 45
[ 0, 0, ^H4DB1,  .Z. ] -> [ ^H0D54, ^H45,  0 ,  1 ,  0 , ^HD9 ]; "    TST	X, $B1
[ 0, 1, ^H4DB1, ^H30 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 20 from A3
[ 0, 0, ^H0E00, ^H20 ] -> [ ^H0D55, ^HA3,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H20 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z)
[ 0, 0, ^HBED6,  .Z. ] -> [ ^H0D56, ^HD6,  0 ,  1 ,  0 , ^H01 ]; "    ST	X-, $D6
[ 0, 1, ^HBED6, ^H03 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store D9 at C8 (x=F1 s=D6)
[ 0, 0, ^H0200,  .Z. ] -> [ ^H0D57, ^HC8,  0 ,  1 ,  0 , ^HD9 ]; "    POPF
[ 0, 1, ^H0200, ^HF6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;set all flags
[ 0, 0, ^H9721, ^HFF ] -> [ ^H0D58, ^HD6,  1 ,  0 ,  0 ,  .X. ]; "    LD	X, $21
[ 0, 1, ^H9721, ^HFF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 5A from 12
[ 0, 0, ^H0E00, ^H5A ] -> [ ^H0D59, ^H12,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H5A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags
[ 0, 0, ^H77C3,  .Z. ] -> [ ^H0D5A, ^HD6,  0 ,  1 ,  0 , ^HAF ]; "    ORI	$C3
[ 0, 1, ^H77C3, ^H24 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^H14 ] -> [ ^H0D5B,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H56 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HAE59,  .Z. ] -> [ ^H0D5C, ^HD5,  0 ,  1 ,  0 , ^HAE ]; "    ST	-X, $59
[ 0, 1, ^HAE59, ^H82 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store DB at 49
[ 0, 0, ^H934A,  .Z. ] -> [ ^H0D5D, ^H49,  0 ,  1 ,  0 , ^HDB ]; "    LD	S, $4A
[ 0, 1, ^H934A, ^H19 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 00 from 1F
[ 0, 0, ^H0E00, ^H00 ] -> [ ^H0D5E, ^H1F,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^H767C,  .Z. ] -> [ ^H0D5F, ^HD4,  0 ,  1 ,  0 , ^HAE ]; "    OR	S, $7C
[ 0, 1, ^H767C, ^HE6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 00 from 50
[ 0, 0, ^H0E00, ^H00 ] -> [ ^H0D60, ^H50,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z)
[ 0, 0, ^HAE84,  .Z. ] -> [ ^H0D61, ^HD3,  0 ,  1 ,  0 , ^HAD ]; "    ST	-X, $84
[ 0, 1, ^HAE84, ^H72 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 00 at 73
[ 0, 0, ^H0200,  .Z. ] -> [ ^H0D62, ^H73,  0 ,  1 ,  0 , ^H00 ]; "    POPF
[ 0, 1, ^H0200, ^H94 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;clear all flags
[ 0, 0, ^H9A78, ^H00 ] -> [ ^H0D63, ^HD3,  1 ,  0 ,  0 ,  .X. ]; "    LD	S-, $78
[ 0, 1, ^H9A78, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 42 from 4C
[ 0, 0, ^H0E00, ^H42 ] -> [ ^H0D64, ^H4C,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H42 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (should be 00)
[ 0, 0, ^H748F,  .Z. ] -> [ ^H0D65, ^HD2,  0 ,  1 ,  0 , ^H00 ]; "    OR	$8F
[ 0, 1, ^H748F, ^HCB ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read AA from 8F
[ 0, 0, ^H0E00, ^HAA ] -> [ ^H0D66, ^H8F,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HAA ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HAE56,  .Z. ] -> [ ^H0D67, ^HD1,  0 ,  1 ,  0 , ^H02 ]; "    ST	-X, $56
[ 0, 1, ^HAE56, ^H59 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store EA at 44
[ 0, 0, ^H7500,  .Z. ] -> [ ^H0D68, ^H44,  0 ,  1 ,  0 , ^HEA ]; "    OR	X, $00
[ 0, 1, ^H7500, ^HEC ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read F1 from EE
[ 0, 0, ^H0E00, ^HF1 ] -> [ ^H0D69, ^HEE,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HF1 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HBE6A,  .Z. ] -> [ ^H0D6A, ^HD0,  0 ,  1 ,  0 , ^H02 ]; "    ST	X-, $6A
[ 0, 1, ^HBE6A, ^H79 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store FB at 58 (x=ED s=D1)
[ 0, 0, ^H0200,  .Z. ] -> [ ^H0D6B, ^H58,  0 ,  1 ,  0 , ^HFB ]; "    POPF
[ 0, 1, ^H0200, ^H44 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;set all flags
[ 0, 0, ^H8A63, ^HFF ] -> [ ^H0D6C, ^HD0,  1 ,  0 ,  0 ,  .X. ]; "    LD	-S, $63
[ 0, 1, ^H8A63, ^HFF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 3C from 33
[ 0, 0, ^H0E00, ^H3C ] -> [ ^H0D6D, ^H33,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H3C ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags
[ 0, 0, ^H37C3,  .Z. ] -> [ ^H0D6E, ^HCF,  0 ,  1 ,  0 , ^HAF ]; "    XORI	$C3
[ 0, 1, ^H37C3, ^H6D ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^H01 ] -> [ ^H0D6F,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H41 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HAEFF,  .Z. ] -> [ ^H0D70, ^HCE,  0 ,  1 ,  0 , ^HAE ]; "    ST	-X, $FF
[ 0, 1, ^HAEFF, ^HA2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store FF at EB
[ 0, 0, ^H82A4,  .Z. ] -> [ ^H0D71, ^HEB,  0 ,  1 ,  0 , ^HFF ]; "    LD	+S, $A4
[ 0, 1, ^H82A4, ^HA6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read C6 from 73
[ 0, 0, ^H0E00, ^HC6 ] -> [ ^H0D72, ^H73,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HC6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^H36BB,  .Z. ] -> [ ^H0D73, ^HCE,  0 ,  1 ,  0 , ^HAE ]; "    XOR	S, $BB
[ 0, 1, ^H36BB, ^H06 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read C6 from 89
[ 0, 0, ^H0E00, ^HC6 ] -> [ ^H0D74, ^H89,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HC6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z)
[ 0, 0, ^HAE1E,  .Z. ] -> [ ^H0D75, ^HCD,  0 ,  1 ,  0 , ^HAD ]; "    ST	-X, $1E
[ 0, 1, ^HAE1E, ^H13 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 00 at 09
[ 0, 0, ^H0200,  .Z. ] -> [ ^H0D76, ^H09,  0 ,  1 ,  0 , ^H00 ]; "    POPF
[ 0, 1, ^H0200, ^H2A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;clear all flags
[ 0, 0, ^H9287, ^H00 ] -> [ ^H0D77, ^HCD,  1 ,  0 ,  0 ,  .X. ]; "    LD	S+, $87
[ 0, 1, ^H9287, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 2C from 55
[ 0, 0, ^H0E00, ^H2C ] -> [ ^H0D78, ^H55,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H2C ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (should be 00)
[ 0, 0, ^H349A,  .Z. ] -> [ ^H0D79, ^HCE,  0 ,  1 ,  0 , ^H00 ]; "    XOR	$9A
[ 0, 1, ^H349A, ^H88 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read AA from 9A
[ 0, 0, ^H0E00, ^HAA ] -> [ ^H0D7A, ^H9A,  1 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HAA ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HAE92,  .Z. ] -> [ ^H0D7B, ^HCD,  0 ,  1 ,  0 , ^H02 ]; "    ST	-X, $92
[ 0, 1, ^HAE92, ^H11 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 86 at 7C
[ 0, 0, ^H35EE,  .Z. ] -> [ ^H0D7C, ^H7C,  0 ,  1 ,  0 , ^H86 ]; "    XOR	X, $EE
[ 0, 1, ^H35EE, ^HD0 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;read 84 from D8
[ 0, 0, ^HBE6C, ^H84 ] -> [ ^H0D7D, ^HD8,  1 ,  0 ,  0 ,  .X. ]; "    ST	X-, $6C
[ 0, 1, ^HBE6C, ^H84 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 02 at 56
[ 0, 0, ^H0E00,  .Z. ] -> [ ^H0D7E, ^H56,  0 ,  1 ,  0 , ^H02 ]; "    PUSHF
[ 0, 1, ^H0E00, ^H90 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (none set)
[ 0, 0, ^H3702,  .Z. ] -> [ ^H0D7F, ^HCC,  0 ,  1 ,  0 , ^H00 ]; "    XORI	$02
[ 0, 1, ^H3702, ^H57 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H0E00, ^HE9 ] -> [ ^H0D80,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HEC ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (Z)
[ 0, 0, ^HBE33,  .Z. ] -> [ ^H0D81, ^HCB,  0 ,  1 ,  0 , ^H01 ]; "    ST	X-, $33
[ 0, 1, ^HBE33, ^H85 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 00 at 1C (x=E8 s=CB)

" ; test branch instructions (all branch delay slots are NOPs until last two Jcc

[ 0, 0, ^HD234,  .Z. ] -> [ ^H0D82, ^H1C,  0 ,  1 ,  0 , ^H00 ]; "    JMP	$1234
[ 0, 1, ^HD234, ^H0D ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check unconditional jump
[ 0, 0, ^H8955, ^H2C ] -> [ ^H0D83,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LDI	$55
[ 0, 1, ^H8955, ^H89 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H3355, ^H82 ] -> [ ^H1234,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    CMPI	$55
[ 0, 1, ^H3355, ^H9B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^H9F31, ^HBF ] -> [ ^H1235,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JZ	+$31
[ 0, 1, ^H9F31, ^HD5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check conditional jump (should take it)
[ 0, 0, ^H1F80, ^HD4 ] -> [ ^H1236,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H65 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H3300, ^H7B ] -> [ ^H1267,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    CMPI	$0
[ 0, 1, ^H3300, ^HA5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;now should not be equal
[ 0, 0, ^H9F44, ^HE8 ] -> [ ^H1268,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JZ	+$44
[ 0, 1, ^H9F44, ^HF8 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^H15 ] -> [ ^H1269,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H52 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H4D27, ^HD9 ] -> [ ^H126A,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    TST	X, $27
[ 0, 1, ^H4D27, ^H0E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;test 55 vs. AA stored at 0F
[ 0, 0, ^H9C11, ^HAA ] -> [ ^H126B, ^H0F,  1 ,  0 ,  0 ,  .X. ]; "    JNZ	+$11
[ 0, 1, ^H9C11, ^HAA ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^H4E ] -> [ ^H126C,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HD4 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H9F8E, ^H37 ] -> [ ^H126D,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JZ	-$72
[ 0, 1, ^H9F8E, ^HC4 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^H5D ] -> [ ^H126E,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H1E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H9BDE, ^H1A ] -> [ ^H11FC,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JS	-$22
[ 0, 1, ^H9BDE, ^H1A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^H99 ] -> [ ^H11FD,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HB9 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H98FE, ^H68 ] -> [ ^H11FE,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JNS	-$2
[ 0, 1, ^H98FE, ^HAB ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^H6B ] -> [ ^H11FF,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HA4 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H3100, ^H63 ] -> [ ^H11FD,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    CMP	X, 0
[ 0, 1, ^H3100, ^HAF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;subtract C0 (-40) and get 95 which overflows
[ 0, 0, ^HB841, ^HC0 ] -> [ ^H11FE, ^HE8,  1 ,  0 ,  0 ,  .X. ]; "    JL	+$41
[ 0, 1, ^HB841, ^HC0 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^H74 ] -> [ ^H11FF,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H6A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HACE1, ^H76 ] -> [ ^H1200,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JLE	-$1F
[ 0, 1, ^HACE1, ^H2E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^HFA ] -> [ ^H1201,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H85 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HAF81, ^H40 ] -> [ ^H1202,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JG	-$7F
[ 0, 1, ^HAF81, ^H86 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^H98 ] -> [ ^H1203,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HF3 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HBB7F, ^HE2 ] -> [ ^H1184,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JGE	+$7F
[ 0, 1, ^HBB7F, ^H20 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^H26 ] -> [ ^H1185,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H17 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H8880, ^H86 ] -> [ ^H1204,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JA	-$80
[ 0, 1, ^H8880, ^H6F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^HE7 ] -> [ ^H1205,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HD2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H8C20, ^H30 ] -> [ ^H1206,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JAE	+$20
[ 0, 1, ^H8C20, ^H2A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^HF2 ] -> [ ^H1207,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HE1 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H8F41, ^HC9 ] -> [ ^H1208,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JB	+$41
[ 0, 1, ^H8F41, ^HCA ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^HE2 ] -> [ ^H1209,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H7A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H8BE0, ^H69 ] -> [ ^H124A,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JBE	-$20
[ 0, 1, ^H8BE0, ^H46 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^HC2 ] -> [ ^H124B,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H22 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HA819, ^HE4 ] -> [ ^H122B,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JNV	+$19
[ 0, 1, ^HA819, ^H0D ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^H33 ] -> [ ^H122C,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HD2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HABFD, ^H98 ] -> [ ^H122D,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JV	-$3
[ 0, 1, ^HABFD, ^H45 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^HDF ] -> [ ^H122E,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H4A ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H3033, ^H76 ] -> [ ^H122B,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    CMP	$33
[ 0, 1, ^H3033, ^H43 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;compare with 55 at address 33 and get 0
[ 0, 0, ^HB851, ^H55 ] -> [ ^H122C, ^H33,  1 ,  0 ,  0 ,  .X. ]; "    JL	+$51
[ 0, 1, ^HB851, ^H55 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^H23 ] -> [ ^H122D,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HB5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HACB0, ^H50 ] -> [ ^H122E,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JLE	-$50
[ 0, 1, ^HACB0, ^H4B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^HF8 ] -> [ ^H122F,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H7E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HAFCC, ^H62 ] -> [ ^H11DF,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JG	-$34
[ 0, 1, ^HAFCC, ^H89 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^H22 ] -> [ ^H11E0,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H72 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HBB2D, ^H23 ] -> [ ^H11E1,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JGE	+$2D
[ 0, 1, ^HBB2D, ^H4F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^H9D ] -> [ ^H11E2,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H17 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H88C0, ^H4D ] -> [ ^H120F,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JA	-$40
[ 0, 1, ^H88C0, ^H91 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^H45 ] -> [ ^H1210,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H4B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H8C03, ^H2A ] -> [ ^H1211,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JAE	+$3
[ 0, 1, ^H8C03, ^H9E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^HC4 ] -> [ ^H1212,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H21 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H8F0F, ^H21 ] -> [ ^H1215,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JB	+$F
[ 0, 1, ^H8F0F, ^H21 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^HC1 ] -> [ ^H1216,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HF8 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H8BAF, ^H82 ] -> [ ^H1217,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JBE	-$51
[ 0, 1, ^H8BAF, ^H57 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^H47 ] -> [ ^H1218,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HDD ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H3333, ^H8E ] -> [ ^H11C7,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    CMPI	$33
[ 0, 1, ^H3333, ^H92 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;compare with 33
[ 0, 0, ^H8B47, ^H73 ] -> [ ^H11C8,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JBE	+$47
[ 0, 1, ^H8B47, ^H23 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^HCA ] -> [ ^H11C9,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HEF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H883A, ^H61 ] -> [ ^H11CA,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JA	+$3A
[ 0, 1, ^H883A, ^H41 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^H86 ] -> [ ^H11CB,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H54 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HA857, ^H59 ] -> [ ^H1205,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JNV	+$57
[ 0, 1, ^HA857, ^HEC ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^HA8 ] -> [ ^H1206,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HAD ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HABF0, ^H36 ] -> [ ^H125D,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JV	-$10
[ 0, 1, ^HABF0, ^H75 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^HBE ] -> [ ^H125E,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H67 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H32FC, ^H18 ] -> [ ^H125F,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    CMP	S, -$4
[ 0, 1, ^H32FC, ^H65 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;compare with 67 stored at C7
[ 0, 0, ^HBBDD, ^H67 ] -> [ ^H1260, ^HC7,  1 ,  0 ,  0 ,  .X. ]; "    JGE	-$23
[ 0, 1, ^HBBDD, ^H67 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^H44 ] -> [ ^H1261,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H2C ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^HB864, ^H4B ] -> [ ^H1262,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JL	+$64
[ 0, 1, ^HB864, ^H56 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^H32 ] -> [ ^H1263,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HE1 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H69FF, ^H76 ] -> [ ^H12C7,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    ADD	X, $FF
[ 0, 1, ^H69FF, ^H14 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;add 42 at address E7 giving 97
[ 0, 0, ^H984B, ^H42 ] -> [ ^H12C8, ^HE7,  1 ,  0 ,  0 ,  .X. ]; "    JNS	+$4B
[ 0, 1, ^H984B, ^H42 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H1F80, ^HC9 ] -> [ ^H12C9,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^HDE ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H9B69, ^H08 ] -> [ ^H12CA,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JS	+$69
[ 0, 1, ^H9B69, ^HF5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^H9F ] -> [ ^H12CB,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H6D ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H9CCB, ^HDF ] -> [ ^H1334,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JNZ	-$35
[ 0, 1, ^H9CCB, ^H76 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H1F80, ^HE9 ] -> [ ^H1335,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    NOP
[ 0, 1, ^H1F80, ^H85 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot
[ 0, 0, ^H9F53, ^H3B ] -> [ ^H1300,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JZ	+$53
[ 0, 1, ^H9F53, ^H17 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should not take jump
[ 0, 0, ^H89CE, ^H09 ] -> [ ^H1301,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LDI	$CE
[ 0, 1, ^H89CE, ^HC7 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot, load accumulator
[ 0, 0, ^HA03F, ^HE3 ] -> [ ^H1302,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$3F
[ 0, 1, ^HA03F, ^H79 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store CE at 3F
[ 0, 0, ^H9CEB,  .Z. ] -> [ ^H1303, ^H3F,  0 ,  1 ,  0 , ^HCE ]; "    JNZ	-$15
[ 0, 1, ^H9CEB, ^H58 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;should take jump
[ 0, 0, ^H8961, ^HBA ] -> [ ^H1304,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LDI	$61
[ 0, 1, ^H8961, ^H96 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;branch slot, load accumulator
[ 0, 0, ^HA0AA, ^HB5 ] -> [ ^H12EF,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$AA
[ 0, 1, ^HA0AA, ^H35 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 61 at AA

" ; test CALL and RTS instructions

[ 0, 0, ^HFFFC,  .Z. ] -> [ ^H12F0, ^HAA,  0 ,  1 ,  0 , ^H61 ]; "    CALL	$1FFC
[ 0, 1, ^HFFFC, ^H43 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;call subroutine at 1FFC
[ 0, 0, ^HC111, ^HB4 ] -> [    .X.,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JMP     $0111
[ 0, 1, ^HC111, ^HFF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;ignored, cycle 2 of CALL
[ 0, 0, ^HA0AA,  .Z. ] -> [    .X., ^HCA,  0 ,  1 ,  0 , ^H12 ]; "    STD     $AA
[ 0, 1, ^HA0AA, ^H4E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;ignored, cycle 3 of CALL
[ 0, 0, ^H8023,  .Z. ] -> [    .X., ^HC9,  0 ,  1 ,  0 , ^HF1 ]; "    LDD     $23
[ 0, 1, ^H8023, ^H68 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;ignored, cycle 4 of CALL
[ 0, 0, ^H8955, ^H2D ] -> [ ^H1FFC,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LDI	$55
[ 0, 1, ^H8955, ^H7B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 55 in accumulator
[ 0, 0, ^H7733, ^H2E ] -> [ ^H1FFD,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    ORI	$33
[ 0, 1, ^H7733, ^H46 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;accumulator is 77
[ 0, 0, ^H0E00, ^HAB ] -> [ ^H1FFE,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H5F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V)
[ 0, 0, ^HA055,  .Z. ] -> [ ^H1FFF, ^HC8,  0 ,  1 ,  0 , ^H04 ]; "    STD	$55
[ 0, 1, ^HA055, ^H08 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 77 at 55
[ 0, 0, ^H376D,  .Z. ] -> [ ^H0000, ^H55,  0 ,  1 ,  0 , ^H77 ]; "    XORI	$6D
[ 0, 1, ^H376D, ^H50 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA04B, ^HFB ] -> [ ^H0001,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$4B
[ 0, 1, ^HA04B, ^H4B ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 1A at 4B
[ 0, 0, ^H1F00,  .Z. ] -> [ ^H0002, ^H4B,  0 ,  1 ,  0 , ^H1A ]; "    RTS
[ 0, 1, ^H1F00, ^HC2 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;return from subroutine
[ 0, 0, ^HA055, ^H00 ] -> [    .X., ^HC8,  1 ,  0 ,  0 ,  .X. ]; "    STD	$55
[ 0, 1, ^HA055, ^H00 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;ignored, cycle 2 of RTS
[ 0, 0, ^H8076, ^H04 ] -> [    .X., ^HC9,  1 ,  0 ,  0 ,  .X. ]; "    LDD	$76
[ 0, 1, ^H8076, ^H04 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;ignored, cycle 3 of RTS
[ 0, 0, ^H0E00, ^HCA ] -> [ ^H0400,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HC1 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags haven't changed
[ 0, 0, ^H8943,  .Z. ] -> [ ^H0401, ^HC9,  0 ,  1 ,  0 , ^H04 ]; "    LDI	$43
[ 0, 1, ^H8943, ^HE5 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 43 in accumulator
[ 0, 0, ^H6B3D, ^H45 ] -> [ ^H0402,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    ADDI	$3D
[ 0, 1, ^H6B3D, ^H85 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;accumulator is 80
[ 0, 0, ^H0E00, ^H5D ] -> [ ^H0403,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HB9 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S, V)
[ 0, 0, ^HA033,  .Z. ] -> [ ^H0404, ^HC8,  0 ,  1 ,  0 , ^H06 ]; "    STD	$33
[ 0, 1, ^HA033, ^H04 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 80 at 33
[ 0, 0, ^HE123,  .Z. ] -> [ ^H0405, ^H33,  0 ,  1 ,  0 , ^H80 ]; "    CALL	$0123
[ 0, 1, ^HE123, ^HDC ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;call subroutine at 0123
[ 0, 0, ^HC111, ^H18 ] -> [    .X.,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    JMP     $0111
[ 0, 1, ^HC111, ^H4F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;ignored, cycle 2 of CALL
[ 0, 0, ^HA0AA,  .Z. ] -> [    .X., ^HC7,  0 ,  1 ,  0 , ^H04 ]; "    STD     $AA
[ 0, 1, ^HA0AA, ^HCB ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;ignored, cycle 3 of CALL
[ 0, 0, ^H8023,  .Z. ] -> [    .X., ^HC6,  0 ,  1 ,  0 , ^H06 ]; "    LDD     $23
[ 0, 1, ^H8023, ^HEF ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;ignored, cycle 4 of CALL
[ 0, 0, ^H8973, ^H93 ] -> [ ^H0123,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    LDI	$73
[ 0, 1, ^H8973, ^H8E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 73 in accumulator
[ 0, 0, ^H775C, ^HCA ] -> [ ^H0124,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    ORI	$5C
[ 0, 1, ^H775C, ^H1F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;accumulator is 7F
[ 0, 0, ^H0E00, ^H72 ] -> [ ^H0125,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H51 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (V still set)
[ 0, 0, ^HA02E,  .Z. ] -> [ ^H0126, ^HC5,  0 ,  1 ,  0 , ^H04 ]; "    STD	$2E
[ 0, 1, ^HA02E, ^HE1 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 7F at 2E
[ 0, 0, ^H373E,  .Z. ] -> [ ^H0127, ^H2E,  0 ,  1 ,  0 , ^H7F ]; "    XORI	$3E
[ 0, 1, ^H373E, ^HCA ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " 
[ 0, 0, ^HA0B6, ^H44 ] -> [ ^H0128,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    STD	$B6
[ 0, 1, ^HA0B6, ^H47 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store 41 at B6
[ 0, 0, ^H1F00,  .Z. ] -> [ ^H0129, ^HB6,  0 ,  1 ,  0 , ^H41 ]; "    RTS
[ 0, 1, ^H1F00, ^H2E ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;return from subroutine
[ 0, 0, ^HA055, ^H74 ] -> [    .X., ^HC5,  1 ,  0 ,  0 ,  .X. ]; "    STD	$55
[ 0, 1, ^HA055, ^H74 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;ignored, cycle 2 of RTS
[ 0, 0, ^H8076, ^H18 ] -> [    .X., ^HC6,  1 ,  0 ,  0 ,  .X. ]; "    LDD	$76
[ 0, 1, ^H8076, ^H18 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;ignored, cycle 3 of RTS
[ 0, 0, ^H0E00, ^H48 ] -> [ ^H1874,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^HB6 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags haven't changed
[ 0, 0, ^H8934,  .Z. ] -> [ ^H1875, ^HC6,  0 ,  1 ,  0 , ^H04 ]; "    LDI	$34
[ 0, 1, ^H8934, ^H10 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;put 34 in accumulator
[ 0, 0, ^H6B9B, ^HD5 ] -> [ ^H1876,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    ADDI	$9B
[ 0, 1, ^H6B9B, ^H26 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;accumulator is CF
[ 0, 0, ^H0E00, ^HF9 ] -> [ ^H1877,  .X.,  0 ,  0 ,  0 ,  .X. ]; "    PUSHF
[ 0, 1, ^H0E00, ^H96 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;check flags (S)
[ 0, 0, ^HA099,  .Z. ] -> [ ^H1878, ^HC5,  0 ,  1 ,  0 , ^H02 ]; "    STD	$99
[ 0, 1, ^HA099, ^H0F ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;store CF at 99
[ 0, 0, ^H1F80,  .Z. ] -> [ ^H1879, ^H99,  0 ,  1 ,  0 , ^HCF ]; "    NOP
[ 0, 1, ^H1F80, ^HA1 ] -> [    .X.,  .X., .X., .X., .X.,  .X. ]; " ;NOP to flush out the write before ending


END  CPU